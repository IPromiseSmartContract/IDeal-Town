/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  IDTTokenPool,
  IDTTokenPoolInterface,
} from "../../contracts/IDTTokenPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_idtAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_idtAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "idtAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "idtAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lockRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200134638038062001346833981810160405281019062000037919062000220565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600281905550806004819055505050506200027c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ad8262000180565b9050919050565b620001bf81620001a0565b8114620001cb57600080fd5b50565b600081519050620001df81620001b4565b92915050565b6000819050919050565b620001fa81620001e5565b81146200020657600080fd5b50565b6000815190506200021a81620001ef565b92915050565b6000806000606084860312156200023c576200023b6200017b565b5b60006200024c86828701620001ce565b93505060206200025f8682870162000209565b9250506040620002728682870162000209565b9150509250925092565b6110ba806200028c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461014057806395bc3bd01461015e578063aa8e063b1461018e578063f2fde38b146101be578063f968f493146101da578063f9816b6d146101e4576100a9565b80630d668087146100ae57806322388933146100cc5780634a4fbeec146100ea5780636e27d8891461011a578063715018a614610136575b600080fd5b6100b6610202565b6040516100c39190610a97565b60405180910390f35b6100d4610208565b6040516100e19190610a97565b60405180910390f35b61010460048036038101906100ff9190610b15565b61020e565b6040516101119190610b5d565b60405180910390f35b610134600480360381019061012f9190610ba4565b61022e565b005b61013e610584565b005b610148610598565b6040516101559190610be0565b60405180910390f35b61017860048036038101906101739190610b15565b6105c1565b6040516101859190610a97565b60405180910390f35b6101a860048036038101906101a39190610b15565b6105d9565b6040516101b59190610a97565b60405180910390f35b6101d860048036038101906101d39190610b15565b6105f1565b005b6101e2610674565b005b6101ec61090e565b6040516101f99190610be0565b60405180910390f35b60045481565b60025481565b60036020528060005260406000206000915054906101000a900460ff1681565b610236610934565b60001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146102c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c090610c58565b60405180910390fd5b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103259190610be0565b602060405180830381865afa158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610c8d565b10156103a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039e90610d06565b60405180910390fd5b6002548110156103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e390610d72565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461043b9190610dc1565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016104a193929190610df5565b6020604051808303816000875af11580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190610e58565b5042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61058c610934565b61059660006109b2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60066020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6105f9610934565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f90610ef7565b60405180910390fd5b610671816109b2565b50565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790610f63565b60405180910390fd5b42600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461074e9190610dc1565b111561078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690610fcf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b815260040161082b929190610fef565b6020604051808303816000875af115801561084a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e9190610e58565b506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61093c610a76565b73ffffffffffffffffffffffffffffffffffffffff1661095a610598565b73ffffffffffffffffffffffffffffffffffffffff16146109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611064565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610a9181610a7e565b82525050565b6000602082019050610aac6000830184610a88565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae282610ab7565b9050919050565b610af281610ad7565b8114610afd57600080fd5b50565b600081359050610b0f81610ae9565b92915050565b600060208284031215610b2b57610b2a610ab2565b5b6000610b3984828501610b00565b91505092915050565b60008115159050919050565b610b5781610b42565b82525050565b6000602082019050610b726000830184610b4e565b92915050565b610b8181610a7e565b8114610b8c57600080fd5b50565b600081359050610b9e81610b78565b92915050565b600060208284031215610bba57610bb9610ab2565b5b6000610bc884828501610b8f565b91505092915050565b610bda81610ad7565b82525050565b6000602082019050610bf56000830184610bd1565b92915050565b600082825260208201905092915050565b7f546f6b656e7320616c7265616479206c6f636b65640000000000000000000000600082015250565b6000610c42601583610bfb565b9150610c4d82610c0c565b602082019050919050565b60006020820190508181036000830152610c7181610c35565b9050919050565b600081519050610c8781610b78565b92915050565b600060208284031215610ca357610ca2610ab2565b5b6000610cb184828501610c78565b91505092915050565b7f496e73756666696369656e742049445420746f6b656e73000000000000000000600082015250565b6000610cf0601783610bfb565b9150610cfb82610cba565b602082019050919050565b60006020820190508181036000830152610d1f81610ce3565b9050919050565b7f4e6f7420656e6f7567682049445420746f6b656e7320746f206c6f636b000000600082015250565b6000610d5c601d83610bfb565b9150610d6782610d26565b602082019050919050565b60006020820190508181036000830152610d8b81610d4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dcc82610a7e565b9150610dd783610a7e565b9250828201905080821115610def57610dee610d92565b5b92915050565b6000606082019050610e0a6000830186610bd1565b610e176020830185610bd1565b610e246040830184610a88565b949350505050565b610e3581610b42565b8114610e4057600080fd5b50565b600081519050610e5281610e2c565b92915050565b600060208284031215610e6e57610e6d610ab2565b5b6000610e7c84828501610e43565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610ee1602683610bfb565b9150610eec82610e85565b604082019050919050565b60006020820190508181036000830152610f1081610ed4565b9050919050565b7f546f6b656e73206e6f74206c6f636b6564000000000000000000000000000000600082015250565b6000610f4d601183610bfb565b9150610f5882610f17565b602082019050919050565b60006020820190508181036000830152610f7c81610f40565b9050919050565b7f4c6f636b2074696d65206e6f7420657870697265640000000000000000000000600082015250565b6000610fb9601583610bfb565b9150610fc482610f83565b602082019050919050565b60006020820190508181036000830152610fe881610fac565b9050919050565b60006040820190506110046000830185610bd1565b6110116020830184610a88565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061104e602083610bfb565b915061105982611018565b602082019050919050565b6000602082019050818103600083015261107d81611041565b905091905056fea2646970667358221220ada7daf85459c3837c8e2d639d708683b6c92b953fd793f7bc5f7dfd0f6cbc7e64736f6c63430008120033";

type IDTTokenPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IDTTokenPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IDTTokenPool__factory extends ContractFactory {
  constructor(...args: IDTTokenPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _idtAddress: PromiseOrValue<string>,
    _idtAmount: PromiseOrValue<BigNumberish>,
    _lockTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IDTTokenPool> {
    return super.deploy(
      _idtAddress,
      _idtAmount,
      _lockTime,
      overrides || {}
    ) as Promise<IDTTokenPool>;
  }
  override getDeployTransaction(
    _idtAddress: PromiseOrValue<string>,
    _idtAmount: PromiseOrValue<BigNumberish>,
    _lockTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _idtAddress,
      _idtAmount,
      _lockTime,
      overrides || {}
    );
  }
  override attach(address: string): IDTTokenPool {
    return super.attach(address) as IDTTokenPool;
  }
  override connect(signer: Signer): IDTTokenPool__factory {
    return super.connect(signer) as IDTTokenPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IDTTokenPoolInterface {
    return new utils.Interface(_abi) as IDTTokenPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDTTokenPool {
    return new Contract(address, _abi, signerOrProvider) as IDTTokenPool;
  }
}
